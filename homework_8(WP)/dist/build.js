/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/js/CartComponent.js":
/*!************************************!*\
  !*** ./public/js/CartComponent.js ***!
  \************************************/
/***/ (() => {

eval("const cartItem = {\r\n  props: ['cart_item', 'img'],\r\n\r\n  template:\r\n\r\n\r\n    `<div class=\"cart-product-item1-small\">\r\n                        <button class=\"cart-product-close-cross\" @click=\"$parent.remove(cart_item)\"> <span></span></button>\r\n                        <img :src=\"img\" title=\"product-image\"\r\n                            class=\"cart-product-item1-img\">\r\n                        <div class=\"cart-product-item1-info-small\">\r\n                            <span class=\"cart-product-item1-title-small\">{{ cart_item.product_name }}</span>\r\n                            <span class=\"cart-product-item1-price\">Price:\r\n                                <span>$ {{ cart_item.price }}</span></span>\r\n                            <span class=\"cart-product-item1-color\">Color: Red</span>\r\n                            <span class=\"cart-product-item1-size\">Size: Xl</span>\r\n                            <label class=\"cart-product-item1-quantity\">Quantity: {{ cart_item.quantity }}\r\n                            </label>\r\n                            <span class=\"cart-product-item1-price\">Total price:\r\n                            <span>$ {{ cart_item.quantity*cart_item.price }}</span></span> \r\n                        </div>\r\n                    </div>`\r\n}\r\n\r\nconst cart = {\r\n  components: { 'cart-item': cartItem },\r\n  data() {\r\n    return {\r\n      // cartUrl: '/getBasket.json',\r\n      cart: [],\r\n      show: false,\r\n      // imgCart: 'https://via.placeholder.com/50x100'\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    addProduct(item) {\r\n\r\n      let find = this.cart.find(el => el.id_product === item.id_product);\r\n      if (find) {\r\n        this.$parent.putJson(`/api/cart/${find.id_product}`, { quantity: 1 })\r\n          .then(data => {\r\n            if (data.result === 1) {\r\n              find.quantity++\r\n            }\r\n          })\r\n      } else {\r\n        const prod = Object.assign({ quantity: 1 }, item)\r\n        this.$parent.postJson(`/api/cart`, prod)\r\n          .then(data => {\r\n            if (data.result === 1) {\r\n              this.cart.push(prod);\r\n            }\r\n          })\r\n        // this.cart.push(prod);\r\n        // console.log(this.cart);\r\n      }\r\n\r\n    },\r\n\r\n    // totalCount() {\r\n\r\n\r\n    //   console.log(this.cart[1]);\r\n\r\n    // },\r\n\r\n    remove(item) {\r\n\r\n      if (item.quantity > 1) {\r\n        this.$parent.putJson(`/api/cart/${item.id_product}`, { quantity: -1 })\r\n          .then(data => {\r\n            if (data.result === 1) {\r\n              item.quantity--;\r\n            }\r\n          })\r\n      } else {\r\n        this.$parent.delJson(`/api/cart/${item.id_product}`)\r\n          .then(data => {\r\n            if (data.result === 1) {\r\n              this.cart.splice(this.cart.indexOf(item), 1)\r\n            } else {\r\n              console.log(\"error\");\r\n            }\r\n          })\r\n      }\r\n\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.$parent.getJson(`/api/cart`)\r\n      .then(data => {\r\n        for (let el of data.contents) {\r\n          this.cart.push(el);\r\n          // console.log(this.cart);\r\n        }\r\n      });\r\n  },\r\n\r\n  template:\r\n\r\n\r\n    `<div>\r\n      <button class=\"cart-btn-link\" type=\"button\" @click=\"show=!show\"><svg width=\"32\" height=\"29\" viewBox=\"0 0 32 29\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path\r\n          d=\"M26.2009 29C25.5532 28.9738 24.9415 28.6948 24.4972 28.2227C24.0529 27.7506 23.8114 27.1232 23.8245 26.475C23.8376 25.8269 24.1043 25.2097 24.5673 24.7559C25.0303 24.3022 25.6527 24.048 26.301 24.048C26.9493 24.048 27.5717 24.3022 28.0347 24.7559C28.4977 25.2097 28.7644 25.8269 28.7775 26.475C28.7906 27.1232 28.549 27.7506 28.1047 28.2227C27.6604 28.6948 27.0488 28.9738 26.401 29H26.2009ZM6.75293 26.32C6.75293 25.79 6.91011 25.2718 7.20459 24.8311C7.49907 24.3904 7.91764 24.0469 8.40735 23.844C8.89705 23.6412 9.43594 23.5881 9.95581 23.6915C10.4757 23.7949 10.9532 24.0502 11.328 24.425C11.7028 24.7998 11.9581 25.2773 12.0615 25.7972C12.1649 26.317 12.1118 26.8559 11.9089 27.3456C11.7061 27.8353 11.3626 28.2539 10.9219 28.5483C10.4812 28.8428 9.96304 29 9.43298 29C9.08087 29.0003 8.73212 28.9311 8.40674 28.7966C8.08136 28.662 7.78569 28.4646 7.53662 28.2158C7.28755 27.9669 7.09001 27.6713 6.9552 27.3461C6.82039 27.0208 6.75098 26.6721 6.75098 26.32H6.75293ZM10.553 20.686C10.2935 20.6868 10.0409 20.6024 9.83411 20.4457C9.62727 20.2891 9.47758 20.0689 9.40796 19.819L4.57495 2.36401H1.18201C0.868521 2.36401 0.567859 2.23947 0.346191 2.01781C0.124523 1.79614 0 1.49549 0 1.18201C0 0.868519 0.124523 0.567873 0.346191 0.346205C0.567859 0.124537 0.868521 5.81268e-06 1.18201 5.81268e-06H5.46301C5.7225 -0.00080736 5.97504 0.0837201 6.18176 0.240568C6.38848 0.397416 6.53784 0.617884 6.60693 0.868006L11.4399 18.323H24.6179L29.001 8.27501H14.401C14.2428 8.27961 14.0854 8.25242 13.9379 8.19507C13.7904 8.13771 13.6559 8.05134 13.5424 7.94108C13.4288 7.83082 13.3386 7.69891 13.277 7.55315C13.2154 7.40739 13.1836 7.25075 13.1836 7.0925C13.1836 6.93426 13.2154 6.77762 13.277 6.63186C13.3386 6.4861 13.4288 6.35419 13.5424 6.24393C13.6559 6.13367 13.7904 6.0473 13.9379 5.98994C14.0854 5.93259 14.2428 5.90541 14.401 5.91001H30.814C31.0097 5.90996 31.2022 5.95866 31.3744 6.05172C31.5465 6.14478 31.6928 6.27926 31.7999 6.44301C31.9078 6.60729 31.9734 6.79569 31.9908 6.99145C32.0083 7.18721 31.9771 7.38424 31.9 7.565L26.495 19.977C26.4026 20.1876 26.251 20.3668 26.0585 20.4927C25.866 20.6186 25.641 20.6858 25.411 20.686H10.553Z\" />\r\n       </svg>\r\n\r\n           \r\n     </button>\r\n     <div class=\"cart-products-box-small\" v-show=\"show\">\r\n         <p v-if=\"!cart.length\">Cart is empty</p>\r\n         <cart-item v-for=\"item of cart\"\r\n         :key=\"item.id_product\"\r\n         :img=\"item.product_img\"\r\n         :cart_item=\"item\"></cart-item> \r\n     </div>\r\n  </div>`\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://homework_8_wp/./public/js/CartComponent.js?");

/***/ }),

/***/ "./public/js/MyError.js":
/*!******************************!*\
  !*** ./public/js/MyError.js ***!
  \******************************/
/***/ (() => {

eval("Vue.component('my_error', {\r\n  props: ['error'],\r\n\r\n  template:\r\n    `<div class=\"error-message\" v-show=\"error\">{{errorText}}</div>`,\r\n\r\n  data() {\r\n    return {\r\n      errorText: 'Error: unable to get data from server'\r\n    }\r\n  }\r\n});\n\n//# sourceURL=webpack://homework_8_wp/./public/js/MyError.js?");

/***/ }),

/***/ "./public/js/ProductComponent.js":
/*!***************************************!*\
  !*** ./public/js/ProductComponent.js ***!
  \***************************************/
/***/ (() => {

eval("const product = {\r\n  props: ['product', 'img'],\r\n  template:\r\n    `<div class=\"product-item\">\r\n                            <article class=\"brand-product-item\">\r\n                                <div class=\"product-item-photo\">\r\n                                    <a href=\"#\" class=\"product-item-link\">\r\n                                        <img :src=\"img\" alt=\"product-image\"\r\n                                            class=\"item-img\"></a>\r\n                                </div>\r\n                                <div class=\"ptoduct-item-info\">\r\n                                    <h3 class=\"product-item-title\">{{product.product_name}}</h3>\r\n                                    <p class=\"product-item-summary\">{{product.product_info}}\r\n                                    </p>\r\n                                    <p class=\"product-item-price\">$\\{{product.price}}</p>\r\n                                </div>\r\n\r\n                                <button class=\"product-item-btn\" type=\"button\" @click=\"$root.$refs.cart.addProduct(product)\">\r\n                                    <svg width=\"27\" height=\"25\" viewBox=\"0 0 27 25\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path\r\n                                            d=\"M21.876 22.2662C21.921 22.2549 21.9423 22.2339 21.96 22.2129C21.9678 22.2037 21.9756 22.1946 21.9835 22.1855C22.02 22.1438 22.0233 22.0553 22.0224 22.0105C22.0092 21.9044 21.9185 21.8315 21.8412 21.8315C21.8375 21.8315 21.8336 21.8317 21.8312 21.8318C21.7531 21.8372 21.6653 21.9409 21.6719 22.0625C21.6813 22.1793 21.7675 22.2662 21.8392 22.2662H21.876ZM8.21954 22.2599C8.31873 22.2599 8.39935 22.1655 8.39935 22.0496C8.39935 21.9341 8.31873 21.8401 8.21954 21.8401C8.12042 21.8401 8.03973 21.9341 8.03973 22.0496C8.03973 22.1655 8.12042 22.2599 8.21954 22.2599ZM21.9995 24.2662C21.9517 24.2662 21.8878 24.2662 21.8392 24.2662C20.7017 24.2662 19.7567 23.3545 19.6765 22.198C19.5964 20.9929 20.4937 19.9183 21.6953 19.8364C21.7441 19.8331 21.7928 19.8315 21.8412 19.8315C22.9799 19.8315 23.9413 20.7324 24.019 21.8884C24.0505 22.4915 23.8741 23.0612 23.4898 23.5012C23.1055 23.9575 22.5764 24.2177 21.9995 24.2662ZM8.21954 24.2599C7.01532 24.2599 6.03973 23.2709 6.03973 22.0496C6.03973 20.8291 7.01532 19.8401 8.21954 19.8401C9.42371 19.8401 10.3994 20.8291 10.3994 22.0496C10.3994 23.2709 9.42371 24.2599 8.21954 24.2599ZM21.1984 17.3938H9.13306C8.70013 17.3938 8.31586 17.1005 8.20331 16.6775L4.27753 2.24768H1.52173C0.993408 2.24768 0.560547 1.80859 0.560547 1.27039C0.560547 0.733032 0.993408 0.292969 1.52173 0.292969H4.99933C5.43134 0.292969 5.81561 0.586304 5.9281 1.01025L9.85394 15.4391H20.5576L24.1144 7.13379H12.2578C11.7286 7.13379 11.2957 6.69373 11.2957 6.15649C11.2957 5.61914 11.7286 5.17908 12.2578 5.17908H25.5886C25.9091 5.17908 26.2141 5.34192 26.3896 5.61914C26.566 5.89539 26.5984 6.23743 26.4697 6.547L22.0795 16.807C21.9193 17.1653 21.5827 17.3938 21.1984 17.3938Z\" />\r\n                                    </svg>\r\n                                    <span>Add to Cart</span></button>\r\n\r\n                            </article>\r\n                        </div>`\r\n}\r\n\r\nconst products = {\r\n  components: { product },\r\n\r\n  data() {\r\n    return {\r\n      // catalogUrl: '/catalogData.json',\r\n      products: [],\r\n      filtered: [],\r\n      // imgCatalog: 'https://via.placeholder.com/200x150'\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n\r\n    // this.$parent.getJson(`${API + this.catalogUrl}`)\r\n    //   .then(data => {\r\n    //     for (let el of data) {\r\n    //       this.products.push(el);\r\n    //       this.filtered.push(el);\r\n    //     }\r\n    //   });\r\n    this.$parent.getJson(`/api/products`)\r\n      .then(data => {\r\n        for (let el of data) {\r\n          this.products.push(el);\r\n          this.filtered.push(el);\r\n        }\r\n      });\r\n  },\r\n\r\n  methods: {\r\n    filter(val) {\r\n      const regexp = new RegExp(val, 'i');\r\n      this.filtered = this.products.filter(product => regexp.test(product.product_name));\r\n      console.log(this.filtered);\r\n    }\r\n  },\r\n\r\n  template: `<div class=\"products-list catalog-products-list\">\r\n    <product v-for=\"item of filtered\"\r\n    :key=\"item.id_product\"\r\n    :img=\"item.product_img\"    \r\n    :product=\"item\"\r\n    ></product>\r\n  </div>`\r\n}\r\n\r\n\r\n\r\n{/* <button class=\"buy-btn\" @click=\"$root.addProduct(product)\">Купить</button> более простой вариант */ }\r\n\n\n//# sourceURL=webpack://homework_8_wp/./public/js/ProductComponent.js?");

/***/ }),

/***/ "./public/js/main.js":
/*!***************************!*\
  !*** ./public/js/main.js ***!
  \***************************/
/***/ (() => {

eval("const API = 'https://raw.githubusercontent.com/GeekBrainsTutorial/online-store-api/master/responses';\r\n\r\n\r\nconst app = new Vue({\r\n    el: '#app',\r\n    data: {\r\n        // catalogUrl: '/catalogData.json',\r\n        // cartUrl: '/getBasket.json',\r\n        // cart: [],\r\n        products: [],\r\n        filtered: [],\r\n        // imgCatalog: 'https://via.placeholder.com/200x150',\r\n        // imgCart: 'https://via.placeholder.com/50x100',\r\n        // userSearch: '',\r\n        show: false,\r\n        error: false\r\n    },\r\n\r\n    components: { products, catalog_filter, cart },\r\n\r\n    methods: {\r\n        // filter() {\r\n        //     const regexp = new RegExp(this.userSearch, 'i');\r\n        //     this.filtered = this.products.filter(product => regexp.test(product.product_name));\r\n        //     console.log(this.filtered);\r\n        // },\r\n\r\n\r\n        getJson(url) {\r\n            return fetch(url)\r\n                .then(result => result.json())\r\n                .catch(error => {\r\n                    console.log('connection error');\r\n                    this.error = true;\r\n                })\r\n        },\r\n\r\n        postJson(url, data) {\r\n            return fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(result => result.json())\r\n                .catch(error => {\r\n                    console.log('connection error');\r\n                    this.error = true;\r\n                })\r\n        },\r\n        putJson(url, data) {\r\n            return fetch(url, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(result => result.json())\r\n                .catch(error => {\r\n                    console.log('connection error');\r\n                    this.error = true;\r\n                })\r\n        },\r\n        delJson(url, data) {\r\n            return fetch(url, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(result => result.json())\r\n                .catch(error => {\r\n                    console.log('connection error');\r\n                    this.error = true;\r\n                })\r\n        },\r\n\r\n\r\n\r\n        // addProduct(item) {\r\n\r\n        //     this.getJson(`${API}/addToBasket.json`)\r\n        //         .then(data => {\r\n        //             if (data.result === 1) {\r\n        //                 let find = this.cart.find(el => el.id_product === item.id_product);\r\n        //                 if (find) {\r\n        //                     find.quantity++;\r\n        //                 } else {\r\n\r\n        //                     const prod = Object.assign({ quantity: 1 }, item)\r\n        //                     this.cart.push(prod);\r\n        //                 }\r\n        //             }\r\n        //         });\r\n\r\n        // },\r\n\r\n        // remove(item) {\r\n        //     this.getJson(`${API}/deleteFromBasket.json`)\r\n        //         .then(data => {\r\n        //             if (data.result === 1) {\r\n\r\n        //                 if (item.quantity > 1) {\r\n        //                     item.quantity--;\r\n        //                 } else {\r\n\r\n        //                     this.cart.splice(this.cart.indexOf(item), 1)\r\n        //                 }\r\n        //             }\r\n        //         });\r\n        // }\r\n\r\n    }\r\n    // mounted() {\r\n    //     this.getJson(`${API + this.cartUrl}`)\r\n    //         .then(data => {\r\n    //             for (let el of data.contents) {\r\n    //                 this.cart.push(el);\r\n    //                 // console.log(this.cart);\r\n    //             }\r\n    //         });\r\n    //     this.getJson(`${API + this.catalogUrl}`)\r\n    //         .then(data => {\r\n    //             for (let el of data) {\r\n    //                 this.$data.products.push(el);\r\n    //                 this.$data.filtered.push(el);\r\n    //             }\r\n    //         });\r\n    //     this.getJson(`getProducts.json`)\r\n    //         .then(data => {\r\n    //             for (let el of data) {\r\n    //                 this.products.push(el);\r\n    //                 this.filtered.push(el);\r\n    //             }\r\n    //         });\r\n\r\n    // }\r\n\r\n})\r\n\r\n\r\n\r\n// let arr = [1, 2, 3, 0, 45];\r\n// console.log(arr.indexOf(45));\r\n\r\n// class List {\r\n//     constructor(url, container, list = list2){\r\n//         this.container = container;\r\n//         this.list = list;\r\n//         this.url = url;\r\n//         this.goods = [];\r\n//         this.allProducts = [];\r\n//         this.filtered = [];\r\n//         this._init();\r\n//     }\r\n//     getJson(url){\r\n//         return fetch(url ? url : `${API + this.url}`)\r\n//             .then(result => result.json())\r\n//             .catch(error => {\r\n//                 console.log(error);\r\n//             })\r\n//     }\r\n//     handleData(data){\r\n//         this.goods = [...data];\r\n//         this.render();\r\n//     }\r\n//     calcSum(){\r\n//         return this.allProducts.reduce((accum, item) => accum += item.price, 0);\r\n//     }\r\n//     render(){\r\n//         const block = document.querySelector(this.container);\r\n//         for (let product of this.goods){\r\n//             const productObj = new this.list[this.constructor.name](product);\r\n//             console.log(productObj);\r\n//             this.allProducts.push(productObj);\r\n//             block.insertAdjacentHTML('beforeend', productObj.render());\r\n//         }\r\n//     }\r\n//     filter(value){\r\n//         const regexp = new RegExp(value, 'i');\r\n//         this.filtered = this.allProducts.filter(product => regexp.test(product.product_name));\r\n//         this.allProducts.forEach(el => {\r\n//             const block = document.querySelector(`.product-item[data-id=\"${el.id_product}\"]`);\r\n//             if(!this.filtered.includes(el)){\r\n//                 block.classList.add('invisible');\r\n//             } else {\r\n//                 block.classList.remove('invisible');\r\n//             }\r\n//         })\r\n//     }\r\n//     _init(){\r\n//         return false\r\n//     }\r\n// }\r\n//\r\n// class Item{\r\n//     constructor(el, img = 'https://placehold.it/200x150'){\r\n//         this.product_name = el.product_name;\r\n//         this.price = el.price;\r\n//         this.id_product = el.id_product;\r\n//         this.img = img;\r\n//     }\r\n//     render(){\r\n//         return `<div class=\"product-item\" data-id=\"${this.id_product}\">\r\n//                 <img src=\"${this.img}\" alt=\"Some img\">\r\n//                 <div class=\"desc\">\r\n//                     <h3>${this.product_name}</h3>\r\n//                     <p>${this.price} $</p>\r\n//                     <button class=\"buy-btn\"\r\n//                     data-id=\"${this.id_product}\"\r\n//                     data-name=\"${this.product_name}\"\r\n//                     data-price=\"${this.price}\">Купить</button>\r\n//                 </div>\r\n//             </div>`\r\n//     }\r\n// }\r\n//\r\n// class ProductsList extends List{\r\n//     constructor(cart, container = '.products', url = \"/catalogData.json\"){\r\n//         super(url, container);\r\n//         this.cart = cart;\r\n//         this.getJson()\r\n//             .then(data => this.handleData(data));\r\n//     }\r\n//     _init(){\r\n//         document.querySelector(this.container).addEventListener('click', e => {\r\n//             if(e.target.classList.contains('buy-btn')){\r\n//                 this.cart.addProduct(e.target);\r\n//             }\r\n//         });\r\n//         document.querySelector('.search-form').addEventListener('submit', e => {\r\n//             e.preventDefault();\r\n//             this.filter(document.querySelector('.search-field').value)\r\n//         })\r\n//     }\r\n// }\r\n//\r\n//\r\n// class ProductItem extends Item{}\r\n//\r\n// class Cart extends List{\r\n//     constructor(container = \".cart-block\", url = \"/getBasket.json\"){\r\n//         super(url, container);\r\n//         this.getJson()\r\n//             .then(data => {\r\n//                 this.handleData(data.contents);\r\n//             });\r\n//     }\r\n//     addProduct(element){\r\n//         this.getJson(`${API}/addToBasket.json`)\r\n//             .then(data => {\r\n//                 if(data.result === 1){\r\n//                     let productId = +element.dataset['id'];\r\n//                     let find = this.allProducts.find(product => product.id_product === productId);\r\n//                     if(find){\r\n//                         find.quantity++;\r\n//                         this._updateCart(find);\r\n//                     } else {\r\n//                         let product = {\r\n//                             id_product: productId,\r\n//                             price: +element.dataset['price'],\r\n//                             product_name: element.dataset['name'],\r\n//                             quantity: 1\r\n//                         };\r\n//                         this.goods = [product];\r\n//                         this.render();\r\n//                     }\r\n//                 } else {\r\n//                     alert('Error');\r\n//                 }\r\n//             })\r\n//     }\r\n//     removeProduct(element){\r\n//         this.getJson(`${API}/deleteFromBasket.json`)\r\n//             .then(data => {\r\n//                 if(data.result === 1){\r\n//                     let productId = +element.dataset['id'];\r\n//                     let find = this.allProducts.find(product => product.id_product === productId);\r\n//                     if(find.quantity > 1){\r\n//                         find.quantity--;\r\n//                         this._updateCart(find);\r\n//                     } else {\r\n//                         this.allProducts.splice(this.allProducts.indexOf(find), 1);\r\n//                         document.querySelector(`.cart-item[data-id=\"${productId}\"]`).remove();\r\n//                     }\r\n//                 } else {\r\n//                     alert('Error');\r\n//                 }\r\n//             })\r\n//     }\r\n//     _updateCart(product){\r\n//        let block = document.querySelector(`.cart-item[data-id=\"${product.id_product}\"]`);\r\n//        block.querySelector('.product-quantity').textContent = `Quantity: ${product.quantity}`;\r\n//        block.querySelector('.product-price').textContent = `$${product.quantity*product.price}`;\r\n//     }\r\n//     _init(){\r\n//         document.querySelector('.btn-cart').addEventListener('click', () => {\r\n//             document.querySelector(this.container).classList.toggle('invisible');\r\n//         });\r\n//         document.querySelector(this.container).addEventListener('click', e => {\r\n//            if(e.target.classList.contains('del-btn')){\r\n//                this.removeProduct(e.target);\r\n//            }\r\n//         })\r\n//     }\r\n//\r\n// }\r\n//\r\n// class CartItem extends Item{\r\n//     constructor(el, img = 'https://placehold.it/50x100'){\r\n//         super(el, img);\r\n//         this.quantity = el.quantity;\r\n//     }\r\n//     render(){\r\n//     return `<div class=\"cart-item\" data-id=\"${this.id_product}\">\r\n//             <div class=\"product-bio\">\r\n//             <img src=\"${this.img}\" alt=\"Some image\">\r\n//             <div class=\"product-desc\">\r\n//             <p class=\"product-title\">${this.product_name}</p>\r\n//             <p class=\"product-quantity\">Quantity: ${this.quantity}</p>\r\n//         <p class=\"product-single-price\">$${this.price} each</p>\r\n//         </div>\r\n//         </div>\r\n//         <div class=\"right-block\">\r\n//             <p class=\"product-price\">$${this.quantity*this.price}</p>\r\n//             <button class=\"del-btn\" data-id=\"${this.id_product}\">&times;</button>\r\n//         </div>\r\n//         </div>`\r\n//     }\r\n// }\r\n// const list2 = {\r\n//     ProductsList: ProductItem,\r\n//     Cart: CartItem\r\n// };\r\n//\r\n// let cart = new Cart();\r\n// let products = new ProductsList(cart);\r\n// products.getJson(`getProducts.json`).then(data => products.handleData(data));\r\n\r\n\n\n//# sourceURL=webpack://homework_8_wp/./public/js/main.js?");

/***/ }),

/***/ "./public/js/productFilter.js":
/*!************************************!*\
  !*** ./public/js/productFilter.js ***!
  \************************************/
/***/ (() => {

eval("const catalog_filter = {\r\n\r\n  data() {\r\n    return {\r\n      userSearch: ''\r\n    }\r\n  },\r\n\r\n  template:\r\n\r\n    `<form action=\"#\" class=\"header-search-form\" @submit.prevent='$parent.$refs.products.filter(userSearch)'>\r\n                            <input id=\"search-btn\" class=\"header-search-btn\" type=\"text\" v-model=\"userSearch\">\r\n                            <label for=\"search-btn\"><svg width=\"26\" height=\"27\" viewBox=\"0 0 26 27\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M19.0596 17.6259C20.6713 15.8658 21.6282 13.6048 21.7698 11.2225C21.9113 8.84018 21.2288 6.48173 19.8369 4.54318C18.445 2.60463 16.4285 1.20404 14.126 0.576619C11.8234 -0.0508009 9.3751 0.13316 7.19217 1.09761C5.00923 2.06205 3.22463 3.74825 2.13804 5.87302C1.05145 7.9978 0.729054 10.4318 1.225 12.7661C1.72094 15.1005 3.00501 17.1932 4.86158 18.6927C6.71814 20.1922 9.03413 21.0072 11.4206 21.0009C13.673 21.004 15.8645 20.27 17.6606 18.9109L25.4086 26.7179C25.4941 26.807 25.5965 26.8781 25.7099 26.927C25.8232 26.9759 25.9452 27.0017 26.0686 27.0029C26.1923 27.0033 26.3148 26.9782 26.4283 26.9292C26.5419 26.8801 26.6441 26.8082 26.7286 26.7179C26.9025 26.537 26.9997 26.2958 26.9997 26.0449C26.9997 25.794 26.9025 25.5528 26.7286 25.3719L19.0596 17.6259ZM2.88662 10.5009C2.89946 8.81563 3.41094 7.17187 4.35659 5.77685C5.30224 4.38183 6.63972 3.29801 8.20044 2.662C9.76115 2.02599 11.4752 1.86627 13.1266 2.20298C14.7779 2.53969 16.2926 3.35775 17.4797 4.55404C18.6668 5.75033 19.4732 7.27129 19.7972 8.92519C20.1212 10.5791 19.9483 12.2919 19.3002 13.8476C18.6522 15.4034 17.5581 16.7325 16.1559 17.6674C14.7536 18.6023 13.1059 19.1011 11.4206 19.1009C9.14916 19.0901 6.97482 18.1784 5.37484 16.566C3.77486 14.9537 2.87998 12.7724 2.88662 10.5009Z\" />\r\n                                </svg>\r\n                            </label>\r\n                        </form>`\r\n}\n\n//# sourceURL=webpack://homework_8_wp/./public/js/productFilter.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./public/js/main.js"]();
/******/ 	__webpack_modules__["./public/js/CartComponent.js"]();
/******/ 	__webpack_modules__["./public/js/MyError.js"]();
/******/ 	__webpack_modules__["./public/js/productFilter.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./public/js/ProductComponent.js"]();
/******/ 	
/******/ })()
;